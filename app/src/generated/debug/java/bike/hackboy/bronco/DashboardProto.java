// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dashboard.proto

package bike.hackboy.bronco;

public final class DashboardProto {
  private DashboardProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DashboardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Dashboard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 unknown0 = 1;</code>
     */
    int getUnknown0();

    /**
     * <code>optional int32 duration = 2;</code>
     */
    int getDuration();

    /**
     * <code>optional int32 speed = 3;</code>
     */
    int getSpeed();

    /**
     * <code>optional int32 power = 4;</code>
     */
    int getPower();

    /**
     * <code>optional int32 distance = 5;</code>
     */
    int getDistance();

    /**
     * <code>optional int32 batttery = 6;</code>
     */
    int getBatttery();

    /**
     * <code>optional int32 assistance = 7;</code>
     */
    int getAssistance();

    /**
     * <code>optional int32 lights = 8;</code>
     */
    int getLights();

    /**
     * <code>optional int32 unknown1 = 9;</code>
     */
    int getUnknown1();

    /**
     * <code>optional float unknown2 = 10;</code>
     */
    float getUnknown2();

    /**
     * <code>optional int32 unknown3 = 11;</code>
     */
    int getUnknown3();

    /**
     * <code>optional int32 unknown4 = 12;</code>
     */
    int getUnknown4();

    /**
     * <code>optional int32 unknown5 = 13;</code>
     */
    int getUnknown5();
  }
  /**
   * Protobuf type {@code Dashboard}
   */
  public  static final class Dashboard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Dashboard)
      DashboardOrBuilder {
    // Use Dashboard.newBuilder() to construct.
    private Dashboard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dashboard() {
      unknown0_ = 0;
      duration_ = 0;
      speed_ = 0;
      power_ = 0;
      distance_ = 0;
      batttery_ = 0;
      assistance_ = 0;
      lights_ = 0;
      unknown1_ = 0;
      unknown2_ = 0F;
      unknown3_ = 0;
      unknown4_ = 0;
      unknown5_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Dashboard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              unknown0_ = input.readInt32();
              break;
            }
            case 16: {

              duration_ = input.readInt32();
              break;
            }
            case 24: {

              speed_ = input.readInt32();
              break;
            }
            case 32: {

              power_ = input.readInt32();
              break;
            }
            case 40: {

              distance_ = input.readInt32();
              break;
            }
            case 48: {

              batttery_ = input.readInt32();
              break;
            }
            case 56: {

              assistance_ = input.readInt32();
              break;
            }
            case 64: {

              lights_ = input.readInt32();
              break;
            }
            case 72: {

              unknown1_ = input.readInt32();
              break;
            }
            case 85: {

              unknown2_ = input.readFloat();
              break;
            }
            case 88: {

              unknown3_ = input.readInt32();
              break;
            }
            case 96: {

              unknown4_ = input.readInt32();
              break;
            }
            case 104: {

              unknown5_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bike.hackboy.bronco.DashboardProto.internal_static_Dashboard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bike.hackboy.bronco.DashboardProto.internal_static_Dashboard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bike.hackboy.bronco.DashboardProto.Dashboard.class, bike.hackboy.bronco.DashboardProto.Dashboard.Builder.class);
    }

    public static final int UNKNOWN0_FIELD_NUMBER = 1;
    private int unknown0_;
    /**
     * <code>optional int32 unknown0 = 1;</code>
     */
    public int getUnknown0() {
      return unknown0_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private int duration_;
    /**
     * <code>optional int32 duration = 2;</code>
     */
    public int getDuration() {
      return duration_;
    }

    public static final int SPEED_FIELD_NUMBER = 3;
    private int speed_;
    /**
     * <code>optional int32 speed = 3;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    public static final int POWER_FIELD_NUMBER = 4;
    private int power_;
    /**
     * <code>optional int32 power = 4;</code>
     */
    public int getPower() {
      return power_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 5;
    private int distance_;
    /**
     * <code>optional int32 distance = 5;</code>
     */
    public int getDistance() {
      return distance_;
    }

    public static final int BATTTERY_FIELD_NUMBER = 6;
    private int batttery_;
    /**
     * <code>optional int32 batttery = 6;</code>
     */
    public int getBatttery() {
      return batttery_;
    }

    public static final int ASSISTANCE_FIELD_NUMBER = 7;
    private int assistance_;
    /**
     * <code>optional int32 assistance = 7;</code>
     */
    public int getAssistance() {
      return assistance_;
    }

    public static final int LIGHTS_FIELD_NUMBER = 8;
    private int lights_;
    /**
     * <code>optional int32 lights = 8;</code>
     */
    public int getLights() {
      return lights_;
    }

    public static final int UNKNOWN1_FIELD_NUMBER = 9;
    private int unknown1_;
    /**
     * <code>optional int32 unknown1 = 9;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int UNKNOWN2_FIELD_NUMBER = 10;
    private float unknown2_;
    /**
     * <code>optional float unknown2 = 10;</code>
     */
    public float getUnknown2() {
      return unknown2_;
    }

    public static final int UNKNOWN3_FIELD_NUMBER = 11;
    private int unknown3_;
    /**
     * <code>optional int32 unknown3 = 11;</code>
     */
    public int getUnknown3() {
      return unknown3_;
    }

    public static final int UNKNOWN4_FIELD_NUMBER = 12;
    private int unknown4_;
    /**
     * <code>optional int32 unknown4 = 12;</code>
     */
    public int getUnknown4() {
      return unknown4_;
    }

    public static final int UNKNOWN5_FIELD_NUMBER = 13;
    private int unknown5_;
    /**
     * <code>optional int32 unknown5 = 13;</code>
     */
    public int getUnknown5() {
      return unknown5_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (unknown0_ != 0) {
        output.writeInt32(1, unknown0_);
      }
      if (duration_ != 0) {
        output.writeInt32(2, duration_);
      }
      if (speed_ != 0) {
        output.writeInt32(3, speed_);
      }
      if (power_ != 0) {
        output.writeInt32(4, power_);
      }
      if (distance_ != 0) {
        output.writeInt32(5, distance_);
      }
      if (batttery_ != 0) {
        output.writeInt32(6, batttery_);
      }
      if (assistance_ != 0) {
        output.writeInt32(7, assistance_);
      }
      if (lights_ != 0) {
        output.writeInt32(8, lights_);
      }
      if (unknown1_ != 0) {
        output.writeInt32(9, unknown1_);
      }
      if (unknown2_ != 0F) {
        output.writeFloat(10, unknown2_);
      }
      if (unknown3_ != 0) {
        output.writeInt32(11, unknown3_);
      }
      if (unknown4_ != 0) {
        output.writeInt32(12, unknown4_);
      }
      if (unknown5_ != 0) {
        output.writeInt32(13, unknown5_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (unknown0_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unknown0_);
      }
      if (duration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, duration_);
      }
      if (speed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, speed_);
      }
      if (power_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, power_);
      }
      if (distance_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, distance_);
      }
      if (batttery_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, batttery_);
      }
      if (assistance_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, assistance_);
      }
      if (lights_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lights_);
      }
      if (unknown1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, unknown1_);
      }
      if (unknown2_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, unknown2_);
      }
      if (unknown3_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown3_);
      }
      if (unknown4_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, unknown4_);
      }
      if (unknown5_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, unknown5_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof bike.hackboy.bronco.DashboardProto.Dashboard)) {
        return super.equals(obj);
      }
      bike.hackboy.bronco.DashboardProto.Dashboard other = (bike.hackboy.bronco.DashboardProto.Dashboard) obj;

      boolean result = true;
      result = result && (getUnknown0()
          == other.getUnknown0());
      result = result && (getDuration()
          == other.getDuration());
      result = result && (getSpeed()
          == other.getSpeed());
      result = result && (getPower()
          == other.getPower());
      result = result && (getDistance()
          == other.getDistance());
      result = result && (getBatttery()
          == other.getBatttery());
      result = result && (getAssistance()
          == other.getAssistance());
      result = result && (getLights()
          == other.getLights());
      result = result && (getUnknown1()
          == other.getUnknown1());
      result = result && (
          java.lang.Float.floatToIntBits(getUnknown2())
          == java.lang.Float.floatToIntBits(
              other.getUnknown2()));
      result = result && (getUnknown3()
          == other.getUnknown3());
      result = result && (getUnknown4()
          == other.getUnknown4());
      result = result && (getUnknown5()
          == other.getUnknown5());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UNKNOWN0_FIELD_NUMBER;
      hash = (53 * hash) + getUnknown0();
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDuration();
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSpeed();
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + getPower();
      hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getDistance();
      hash = (37 * hash) + BATTTERY_FIELD_NUMBER;
      hash = (53 * hash) + getBatttery();
      hash = (37 * hash) + ASSISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getAssistance();
      hash = (37 * hash) + LIGHTS_FIELD_NUMBER;
      hash = (53 * hash) + getLights();
      hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
      hash = (53 * hash) + getUnknown1();
      hash = (37 * hash) + UNKNOWN2_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getUnknown2());
      hash = (37 * hash) + UNKNOWN3_FIELD_NUMBER;
      hash = (53 * hash) + getUnknown3();
      hash = (37 * hash) + UNKNOWN4_FIELD_NUMBER;
      hash = (53 * hash) + getUnknown4();
      hash = (37 * hash) + UNKNOWN5_FIELD_NUMBER;
      hash = (53 * hash) + getUnknown5();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static bike.hackboy.bronco.DashboardProto.Dashboard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bike.hackboy.bronco.DashboardProto.Dashboard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Dashboard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Dashboard)
        bike.hackboy.bronco.DashboardProto.DashboardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bike.hackboy.bronco.DashboardProto.internal_static_Dashboard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bike.hackboy.bronco.DashboardProto.internal_static_Dashboard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bike.hackboy.bronco.DashboardProto.Dashboard.class, bike.hackboy.bronco.DashboardProto.Dashboard.Builder.class);
      }

      // Construct using bike.hackboy.bronco.DashboardProto.Dashboard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        unknown0_ = 0;

        duration_ = 0;

        speed_ = 0;

        power_ = 0;

        distance_ = 0;

        batttery_ = 0;

        assistance_ = 0;

        lights_ = 0;

        unknown1_ = 0;

        unknown2_ = 0F;

        unknown3_ = 0;

        unknown4_ = 0;

        unknown5_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bike.hackboy.bronco.DashboardProto.internal_static_Dashboard_descriptor;
      }

      public bike.hackboy.bronco.DashboardProto.Dashboard getDefaultInstanceForType() {
        return bike.hackboy.bronco.DashboardProto.Dashboard.getDefaultInstance();
      }

      public bike.hackboy.bronco.DashboardProto.Dashboard build() {
        bike.hackboy.bronco.DashboardProto.Dashboard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bike.hackboy.bronco.DashboardProto.Dashboard buildPartial() {
        bike.hackboy.bronco.DashboardProto.Dashboard result = new bike.hackboy.bronco.DashboardProto.Dashboard(this);
        result.unknown0_ = unknown0_;
        result.duration_ = duration_;
        result.speed_ = speed_;
        result.power_ = power_;
        result.distance_ = distance_;
        result.batttery_ = batttery_;
        result.assistance_ = assistance_;
        result.lights_ = lights_;
        result.unknown1_ = unknown1_;
        result.unknown2_ = unknown2_;
        result.unknown3_ = unknown3_;
        result.unknown4_ = unknown4_;
        result.unknown5_ = unknown5_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bike.hackboy.bronco.DashboardProto.Dashboard) {
          return mergeFrom((bike.hackboy.bronco.DashboardProto.Dashboard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bike.hackboy.bronco.DashboardProto.Dashboard other) {
        if (other == bike.hackboy.bronco.DashboardProto.Dashboard.getDefaultInstance()) return this;
        if (other.getUnknown0() != 0) {
          setUnknown0(other.getUnknown0());
        }
        if (other.getDuration() != 0) {
          setDuration(other.getDuration());
        }
        if (other.getSpeed() != 0) {
          setSpeed(other.getSpeed());
        }
        if (other.getPower() != 0) {
          setPower(other.getPower());
        }
        if (other.getDistance() != 0) {
          setDistance(other.getDistance());
        }
        if (other.getBatttery() != 0) {
          setBatttery(other.getBatttery());
        }
        if (other.getAssistance() != 0) {
          setAssistance(other.getAssistance());
        }
        if (other.getLights() != 0) {
          setLights(other.getLights());
        }
        if (other.getUnknown1() != 0) {
          setUnknown1(other.getUnknown1());
        }
        if (other.getUnknown2() != 0F) {
          setUnknown2(other.getUnknown2());
        }
        if (other.getUnknown3() != 0) {
          setUnknown3(other.getUnknown3());
        }
        if (other.getUnknown4() != 0) {
          setUnknown4(other.getUnknown4());
        }
        if (other.getUnknown5() != 0) {
          setUnknown5(other.getUnknown5());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bike.hackboy.bronco.DashboardProto.Dashboard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bike.hackboy.bronco.DashboardProto.Dashboard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int unknown0_ ;
      /**
       * <code>optional int32 unknown0 = 1;</code>
       */
      public int getUnknown0() {
        return unknown0_;
      }
      /**
       * <code>optional int32 unknown0 = 1;</code>
       */
      public Builder setUnknown0(int value) {
        
        unknown0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown0 = 1;</code>
       */
      public Builder clearUnknown0() {
        
        unknown0_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional int32 duration = 2;</code>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional int32 duration = 2;</code>
       */
      public Builder setDuration(int value) {
        
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 duration = 2;</code>
       */
      public Builder clearDuration() {
        
        duration_ = 0;
        onChanged();
        return this;
      }

      private int speed_ ;
      /**
       * <code>optional int32 speed = 3;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional int32 speed = 3;</code>
       */
      public Builder setSpeed(int value) {
        
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 speed = 3;</code>
       */
      public Builder clearSpeed() {
        
        speed_ = 0;
        onChanged();
        return this;
      }

      private int power_ ;
      /**
       * <code>optional int32 power = 4;</code>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional int32 power = 4;</code>
       */
      public Builder setPower(int value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 power = 4;</code>
       */
      public Builder clearPower() {
        
        power_ = 0;
        onChanged();
        return this;
      }

      private int distance_ ;
      /**
       * <code>optional int32 distance = 5;</code>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <code>optional int32 distance = 5;</code>
       */
      public Builder setDistance(int value) {
        
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 distance = 5;</code>
       */
      public Builder clearDistance() {
        
        distance_ = 0;
        onChanged();
        return this;
      }

      private int batttery_ ;
      /**
       * <code>optional int32 batttery = 6;</code>
       */
      public int getBatttery() {
        return batttery_;
      }
      /**
       * <code>optional int32 batttery = 6;</code>
       */
      public Builder setBatttery(int value) {
        
        batttery_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batttery = 6;</code>
       */
      public Builder clearBatttery() {
        
        batttery_ = 0;
        onChanged();
        return this;
      }

      private int assistance_ ;
      /**
       * <code>optional int32 assistance = 7;</code>
       */
      public int getAssistance() {
        return assistance_;
      }
      /**
       * <code>optional int32 assistance = 7;</code>
       */
      public Builder setAssistance(int value) {
        
        assistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 assistance = 7;</code>
       */
      public Builder clearAssistance() {
        
        assistance_ = 0;
        onChanged();
        return this;
      }

      private int lights_ ;
      /**
       * <code>optional int32 lights = 8;</code>
       */
      public int getLights() {
        return lights_;
      }
      /**
       * <code>optional int32 lights = 8;</code>
       */
      public Builder setLights(int value) {
        
        lights_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lights = 8;</code>
       */
      public Builder clearLights() {
        
        lights_ = 0;
        onChanged();
        return this;
      }

      private int unknown1_ ;
      /**
       * <code>optional int32 unknown1 = 9;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <code>optional int32 unknown1 = 9;</code>
       */
      public Builder setUnknown1(int value) {
        
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown1 = 9;</code>
       */
      public Builder clearUnknown1() {
        
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private float unknown2_ ;
      /**
       * <code>optional float unknown2 = 10;</code>
       */
      public float getUnknown2() {
        return unknown2_;
      }
      /**
       * <code>optional float unknown2 = 10;</code>
       */
      public Builder setUnknown2(float value) {
        
        unknown2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float unknown2 = 10;</code>
       */
      public Builder clearUnknown2() {
        
        unknown2_ = 0F;
        onChanged();
        return this;
      }

      private int unknown3_ ;
      /**
       * <code>optional int32 unknown3 = 11;</code>
       */
      public int getUnknown3() {
        return unknown3_;
      }
      /**
       * <code>optional int32 unknown3 = 11;</code>
       */
      public Builder setUnknown3(int value) {
        
        unknown3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown3 = 11;</code>
       */
      public Builder clearUnknown3() {
        
        unknown3_ = 0;
        onChanged();
        return this;
      }

      private int unknown4_ ;
      /**
       * <code>optional int32 unknown4 = 12;</code>
       */
      public int getUnknown4() {
        return unknown4_;
      }
      /**
       * <code>optional int32 unknown4 = 12;</code>
       */
      public Builder setUnknown4(int value) {
        
        unknown4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown4 = 12;</code>
       */
      public Builder clearUnknown4() {
        
        unknown4_ = 0;
        onChanged();
        return this;
      }

      private int unknown5_ ;
      /**
       * <code>optional int32 unknown5 = 13;</code>
       */
      public int getUnknown5() {
        return unknown5_;
      }
      /**
       * <code>optional int32 unknown5 = 13;</code>
       */
      public Builder setUnknown5(int value) {
        
        unknown5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown5 = 13;</code>
       */
      public Builder clearUnknown5() {
        
        unknown5_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Dashboard)
    }

    // @@protoc_insertion_point(class_scope:Dashboard)
    private static final bike.hackboy.bronco.DashboardProto.Dashboard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bike.hackboy.bronco.DashboardProto.Dashboard();
    }

    public static bike.hackboy.bronco.DashboardProto.Dashboard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dashboard>
        PARSER = new com.google.protobuf.AbstractParser<Dashboard>() {
      public Dashboard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Dashboard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Dashboard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Dashboard> getParserForType() {
      return PARSER;
    }

    public bike.hackboy.bronco.DashboardProto.Dashboard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Dashboard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Dashboard_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017dashboard.proto\"\357\001\n\tDashboard\022\020\n\010unkno" +
      "wn0\030\001 \001(\005\022\020\n\010duration\030\002 \001(\005\022\r\n\005speed\030\003 \001" +
      "(\005\022\r\n\005power\030\004 \001(\005\022\020\n\010distance\030\005 \001(\005\022\020\n\010b" +
      "atttery\030\006 \001(\005\022\022\n\nassistance\030\007 \001(\005\022\016\n\006lig" +
      "hts\030\010 \001(\005\022\020\n\010unknown1\030\t \001(\005\022\020\n\010unknown2\030" +
      "\n \001(\002\022\020\n\010unknown3\030\013 \001(\005\022\020\n\010unknown4\030\014 \001(" +
      "\005\022\020\n\010unknown5\030\r \001(\005B%\n\023bike.hackboy.bron" +
      "coB\016DashboardProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Dashboard_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Dashboard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Dashboard_descriptor,
        new java.lang.String[] { "Unknown0", "Duration", "Speed", "Power", "Distance", "Batttery", "Assistance", "Lights", "Unknown1", "Unknown2", "Unknown3", "Unknown4", "Unknown5", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
